services:
  planetiler:
    build:
      context: ./planetiler
    entrypoint: ["/run.sh"]
    environment:
      - PBF_URL=${PBF_URL}
    volumes:
      - ./data:/data
    restart: "no"

  tileserver:
    build:
      context: ./tileserver
    ports:
      - "7070:7070"
    volumes:
      - ./data:/data
      - ./wait_for.sh:/wait_for.sh:ro
    command: ["/bin/sh", "-c", "sh /wait_for.sh planetiler finished && tileserver-gl-light --config /config.json"]
    depends_on:
      - planetiler

  graphhopper:
    build:
      context: ./graphhopper
    entrypoint: ["/bin/sh", "-c", "sh /wait_for.sh planetiler starting && /run.sh"]
    volumes:
      - ./data:/data
      - ./wait_for.sh:/wait_for.sh:ro
    ports:
      - "8989:8989"
    # waits for PBF import done by planetiler
    depends_on:
      - planetiler

  photon:
    build:
      context: ./photon
    entrypoint: ["/run.sh"]
    environment:
      - PHOTON_DB=${PHOTON_DB}
    volumes:
      - ./data:/data
    # expose to other services like geocoder-converter
    expose:
      - "2322"
    ports:
      - "2322:2322"

  geocoder-converter:
    build:
      context: ./geocoder-converter
    entrypoint: ["/bin/sh", "-c", "sh /wait_for.sh photon starting && /run.sh"]
    volumes:
      - ./wait_for.sh:/wait_for.sh:ro
      - ./data:/data # for status files
    ports:
      - "8080:8080"
    depends_on:
      - photon

networks:
  default:
    driver: bridge
